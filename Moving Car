Code:

// Moving car 
//Rashid Al Qubaisi

PVector position, velocity;
float angle, steerAngle;

boolean[] keys = new boolean[256];
//control statement for true/false on arrow keys
void setup() {
 
  size(440, 440);
  
  velocity = new PVector();
  position = new PVector(width * 0.5, height * 0.5);
  
}


void draw() {
  
  background(250);
  PVector force = new PVector();  
  PVector vector1 = new PVector(sin(angle), cos(angle));
  PVector vector2 = new PVector(vector1.y, - vector1.x);
  float forwardVelocity = vector1.dot(velocity);
  float sidewaysVelocity = vector2.dot(velocity);

  //angle at which the car turns
  steerAngle = 0.0;
  float factor = constrain(forwardVelocity * 0.3, -1.0, 1.0); 
  //this controls the maximum speed of the car
  if(keys[37]) {
    //"37" is the keycode value for left arrow
    angle += 0.03 * factor;
    steerAngle = - PI * 0.10;
  }
  if(keys[39]) {
    //"39" is the keycode value for right arrow
    angle -= 0.03 * factor;  
    steerAngle = PI * 0.10;
  }
  
  force.add(PVector.mult(vector1, -forwardVelocity * 0.1));
  if(keys[38]) {
    //38 is they key value for up arrow
    force.add(PVector.mult(vector1, 1.0));
  }    
  if(keys[40]) {
    //40 is the key value for down arrow
    force.add(PVector.mult(vector1, -1.0));
  }   
  
  //this controls the car from speeding off the setup
  float sidewaysFriction = - constrain(sidewaysVelocity * 10.0, -2.0, 2.0);
  force.add(PVector.mult(vector2, sidewaysFriction));  
  
  force.div(10.0);
  velocity.add(force);
  position.add(velocity);
  
  position.x = (position.x + width) % width;
  position.y = (position.y + height) % height;
  
  fill(0, 100);
  noStroke();
  rectMode(CENTER);

  pushMatrix();
  translate(position.x, position.y);
  rotate(-angle);
  rect(0, 0, 25, 50);
  pushMatrix();
  translate(10,17);
  rotate(steerAngle);
  rect(0, 0, 5, 10);
  popMatrix();
  pushMatrix();
  translate(-10,17);
  rotate(steerAngle);
  rect(0, 0, 5, 10);
  popMatrix();
  pushMatrix();
  translate(-10,-17);
  rect(0, 0, 5, 10);
  popMatrix();   
  pushMatrix();
  translate(10,-17);
  rect(0, 0, 5, 10);
  popMatrix();   
  popMatrix();
  
}

void keyPressed() {keys[keyCode] = true;}
void keyReleased() {keys[keyCode] = false;}
//controls the reactions according to if a key is pressed or not
